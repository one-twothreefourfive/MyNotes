Python教程
	前言
		用Python可以做什么？
			可以做日常任务，比如自动备份你的MP3；可以做网站，很多著名的网站包括YouTube就是Python写的；
			可以做网络游戏的后台，很多在线游戏的后台都是Python开发的。总之就是能干很多很多事啦。
		Python当然也有不能干的事情：
			比如写操作系统，这个只能用C语言写；写手机应用，只能用Swift/Objective-C（针对iPhone）和Java（针对Android）；写3D游戏，最好用C或C++。
			
	Python简介
		C语言是可以用来编写操作系统的贴近硬件的语言，所以，C语言适合开发那些追求运行速度、充分发挥硬件性能的程序。而Python是用来编写应用程序的高级编程语言。
		那Python适合开发哪些类型的应用呢？
			1.首选是网络应用，包括网站、后台服务等等；
			2.其次是许多日常需要的小工具，包括系统管理员需要的脚本任务等等；
			3.另外就是把其他语言开发的程序再包装起来，方便使用。
		那Python有哪些缺点呢？
			1.第一个缺点就是运行速度慢，和C程序相比非常慢，因为Python是解释型语言，你的代码在执行时会一行一行地翻译成CPU能理解的机器码，这个翻译过程非常耗时，所以很慢。
			  而C程序是运行前直接编译成CPU能执行的机器码，所以非常快。但是大量的应用程序不需要这么快的运行速度，因为用户根本感觉不出来。
			  例如开发一个下载MP3的网络应用程序，C程序的运行时间需要0.001秒，而Python程序的运行时间需要0.1秒，慢了100倍，
			  但由于网络更慢，需要等待1秒，你想，用户能感觉到1.001秒和1.1秒的区别吗？这就好比F1赛车和普通的出租车在北京三环路上行驶的道理一样，
			  虽然F1赛车理论时速高达400公里，但由于三环路堵车的时速只有20公里，因此，作为乘客，你感觉的时速永远是20公里。
			2.第二个缺点就是代码不能加密。如果要发布你的Python程序，实际上就是发布源代码，这一点跟C语言不同，C语言不用发布源代码，需要把编译后的机器码（也就是你在Windows上常见的xxx.exe文件）发布出去。
			  要从机器码反推出C代码是不可能的，所以，凡是编译型的语言，都没有这个问题，而解释型的语言，则必须把源码发布出去。
			  这个缺点仅限于你要编写的软件需要卖给别人挣钱的时候。好消息是目前的互联网时代，靠卖软件授权的商业模式越来越少了，靠网站和移动应用卖服务的模式越来越多了，后一种模式不需要把源码给别人。
			  再说了，现在如火如荼的开源运动和互联网自由开放的精神是一致的，互联网上有无数非常优秀的像Linux一样的开源代码，我们千万不要高估自己写的代码真的有非常大的“商业价值”。那些大公司的代码不愿意开放的更重要的原因是代码写得太烂了，一旦开源，就没人敢用他们的产品了。

安装Python
	前言
		因为Python是跨平台的，它可以运行在Windows、Mac和各种Linux/Unix系统上。在Windows上写Python程序，放到Linux上也是能够运行的。
		在Mac上安装Python
			如果你正在使用Mac，系统是OS X>=10.9，那么系统自带的Python版本是2.7。要安装最新的Python 3.7，有两个方法：
			方法一：从Python官网下载Python 3.7的安装程序（网速慢的同学请移步国内镜像），双击运行并安装；
			方法二：如果安装了Homebrew，直接通过命令brew install python3安装即可。
		在Linux上安装Python
			如果你正在使用Linux，那我可以假定你有Linux系统管理经验，自行安装Python 3应该没有问题，否则，请换回Windows系统。
			对于大量的目前仍在使用Windows的同学，如果短期内没有打算换Mac，就可以继续阅读以下内容。
		在Windows上安装Python(https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014316090478912dab2a3a9e8f4ed49d28854b292f85bb000)
			1.首先，根据你的Windows版本（64位还是32位）从Python的官方网站下载Python 3.7对应的64位安装程序或32位安装程序（网速慢的同学请移步国内镜像），然后，运行下载的EXE安装包：
			2.特别要注意勾上Add Python 3.7 to PATH，然后点“Install Now”即可完成安装
		运行Python
			安装成功后，打开命令提示符窗口，敲入python后，会出现两种情况：
				情况一：
					PS C:\WINDOWS\system32> python
					Python 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:59:51) [MSC v.1914 64 bit (AMD64)] on win32
					Type "help", "copyright", "credits" or "license" for more information.
					>>>
					看到上面的画面，就说明Python安装成功！你看到提示符>>>就表示我们已经在Python交互式环境中了，可以输入任何Python代码，回车后会立刻得到执行结果。
					现在，输入exit()并回车，就可以退出Python交互式环境（直接关掉命令行窗口也可以）。
				情况二：得到一个错误：
					‘python’ 不是内部或外部命令，也不是可运行的程序或批处理文件。
					看到上面的画面，建议把Python安装程序重新运行一遍，务必记得勾上Add Python 3.7 to PATH。
				
	Python解释器
		CPython
			当我们从Python官方网站下载并安装好Python 3.x后，我们就直接获得了一个官方版本的解释器：CPython。这个解释器是用C语言开发的，所以叫CPython。
			在命令行下运行python就是启动CPython解释器。CPython是使用最广的Python解释器。教程的所有代码也都在CPython下执行。
		小结
			Python的解释器很多，但使用最广泛的还是CPython。如果要和Java或.Net平台交互，最好的办法不是用Jython或IronPython，而是通过网络调用来交互，确保各程序之间的独立性。
			本教程的所有代码只确保在CPython 3.x版本下运行。请务必在本地安装CPython（也就是从Python官方网站下载的安装程序）。
			
第一个Python程序
	前言
		1.命令行模式
			在Windows开始菜单选择“命令提示符”，就进入到命令行模式，它的提示符类似C:\>：
		2.Python交互模式
			在命令行模式下敲命令python，就看到类似如下的一堆文本输出，然后就进入到Python交互模式，它的提示符是>>>。
		3.也可以直接通过开始菜单选择Python (command line)菜单项，直接进入Python交互模式，但是输入exit()后窗口会直接关闭，不会回到命令行模式。
		4.如果要让Python打印出指定的文字，可以用print()函数，然后把希望打印的文字用单引号或者双引号括起来，但不能混用单引号和双引号：
			>>> print('hello, world')
			hello, world
		5.命令行模式和Python交互模式
			命令行模式下：
				1.可以执行python进入Python交互式环境：
					例：C:\> python
					Python交互模式的代码是输入一行，执行一行，而命令行模式下直接运行.py文件是一次性执行该文件内的所有代码。
					可见，Python交互模式主要是为了调试Python代码用的，也便于初学者学习，它不是正式运行Python代码的环境！
				2.也可以执行python hello.py运行一个.py文件
					例：C:\> python hello.py
					如果错误提示No such file or directory说明这个hello.py在当前目录找不到，
					必须先把当前目录切换到hello.py所在的目录下，才能正常执行：
					例：C:\> cd work                                             
						C:\work> python hello.py                            
						Hello, world!  
	使用文本编辑器
		推荐两款文本编辑器：
			1.一个是Sublime Text，免费使用，但是不付费会弹出提示框：
			2.一个是Notepad++，免费使用，有中文界面：
			请注意，用哪个都行，但是绝对不能用Word和Windows自带的记事本。Word保存的不是纯文本文件，而记事本会自作聪明地在文件开始的地方加上几个特殊字符（UTF-8 BOM），结果会导致程序运行出现莫名其妙的错误。
		安装好文本编辑器后，输入以下代码：
			print('hello, world')
		把当前目录切换到hello.py所在目录，就可以运行这个程序了：
			C:\work>python hello.py
			hello, world
		小结
			用文本编辑器写Python程序，然后保存为后缀为.py的文件，就可以用Python直接运行这个程序了。
			Python的交互模式和直接运行.py文件有什么区别呢？
			直接输入python进入交互模式，相当于启动了Python解释器，但是等待你一行一行地输入源代码，每输入一行就执行一行。
			直接运行.py文件相当于启动了Python解释器，然后一次性把.py文件的源代码给执行了，你是没有机会以交互的方式输入源代码的。
			用Python开发程序，完全可以一边在文本编辑器里写代码，一边开一个交互式命令窗口，在写代码的过程中，把部分代码粘到命令行去验证，事半功倍！前提是得有个27'的超大显示器！
			
	Python代码运行助手
		Python代码运行助手可以让你在线输入Python代码，然后通过本机运行的一个Python脚本来执行代码。
	
	输入和输出
		输出(print())
			print()函数的几种用法：
			1.用print()在括号中加上字符串，就可以向屏幕上输出指定的文字。比如输出'hello, world'，用代码实现如下：
				>>> print('hello, world')
				hello, world
			2.print()函数也可以接受多个字符串，用逗号“,”隔开，逗号“,”会输出一个空格，就可以连成一串输出：
				>>> print('The quick brown fox', 'jumps over', 'the lazy dog')
				The quick brown fox jumps over the lazy dog
			3.print()也可以打印整数，或者计算结果：
				>>> print(100 + 200)
				300
				或者
				>>> print('100 + 200 =', 100 + 200)
				100 + 200 = 300
		输入(input())
			input()函数的几种用法：
			1.ython提供了一个input()，可以让用户输入字符串，并存放到一个变量里。比如输入用户的名字：
				>>> name = input()
				Michael
			  你可以输入任意字符，然后按回车后完成输入。答案是存放到name变量里了。可以直接输入name查看变量内容：
				>>> name
				'Michael'
			2.name作为一个变量就是一个字符串。要打印出name变量的内容，除了直接写name然后按回车外，还可以用print()函数：
				>>> print("My name is",name)
				My name is Michael
			3.input()可以让你显示一个字符串来提示用户，于是我们把代码改成：
				>>> name = input('please enter your name: ')
				please enter your name: Michael
				>>> print('hello,', name)
				hello, Michael
    
Python基础	
	小结
		Python使用缩进来组织代码块，请务必遵守约定俗成的习惯，坚持使用4个空格的缩进。
		在文本编辑器中，需要设置把Tab自动转换为4个空格，确保不混用Tab和空格。